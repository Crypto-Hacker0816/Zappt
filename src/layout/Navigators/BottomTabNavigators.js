import React, { useState, useRef, useEffect } from 'react';
import { Icon, Button } from 'react-native-paper';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import Dashboard from '../Dashboard';
import UserPage from '../../layout/User/index';
import Recommendation from '../Recommendation';
import GoogleMap from '../GoogleMap';
import { AuthState, DataState } from '../../context/Provider';
import Search from '../Search';
import { Text, Animated, Easing, View, StyleSheet, Image, Platform, TouchableOpacity } from 'react-native';
import images from '../../assets/images';
import Svg, { Path } from 'react-native-svg';


const Tab = createBottomTabNavigator();

const BottomTabNavigator = () => {
  const {
    searchModalVisible,
    setSearchModalVisible,
    drinkModalVisible,
    setDrinkModalVisible,
    setShowHeader,
  } = DataState();
  const auth = AuthState();

  const [selectedHome, setSelectedHome] = useState(false);
  const [selectedDrinks, setSelectedDrinks] = useState(false);
  const [selectedSearch, setSelectedSearch] = useState(false);
  const [selectedRecommand, setSelectedRecommand] = useState(false);
  const [selectedNotification, setSelectedNotification] = useState(false);
  const maskSize = useRef(new Animated.Value(0)).current;

  const handlePressBottomItem = (item, setItem) => {
    if(item === true) { 
      setItem(false);
    } else {
      setItem(true);
    }
  }
  const toggleAnimation = () => {
    Animated.timing(maskSize, {
      toValue: selectedHome ? 80 : 0,
      duration: 300,
      easing: Easing.ease,
      useNativeDriver: true,
    }).start();
  };

  const CustomButton = ({ onPress, text, svgComponent }) => (
    <TouchableOpacity  
      onPress={onPress} 
      style={styles.customBtn}
      >
      <View>
        {svgComponent}
        <Text style={styles.customBtnText}>{text}</Text>
      </View>
      
    </TouchableOpacity>
  );

  return (
    <Tab.Navigator
      screenOptions={{
        headerShown: false,
        tabBarStyle: {
          backgroundColor: '#181818',
          height: Platform.OS === 'ios' ? 80 : 60,
          borderTopLeftRadius: 15,
          borderTopRightRadius: 15,
        },
        tabBarLabelStyle: {
          top: Platform.OS === 'ios' ? 10 : -10,
        },
        tabBarIconStyle : {
          top : Platform.OS === 'ios' && 5
        }
      }}>
      <Tab.Screen
        name="Home"
        component={Dashboard}
        listeners={{
          tabPress: e => {
            setShowHeader(true);
            handlePressBottomItem(selectedHome, setSelectedHome);
            setSelectedDrinks(false);
            setSelectedNotification(false);
            setSelectedRecommand(false);
            setSelectedSearch(false);
            toggleAnimation();
          },
        }}
        options={{
          tabBarIcon: ({ color, size }) => (
            selectedHome ? (<View>
              <Animated.View style={{ height: maskSize.current }}>
                <Image
                  source={images.bottom_mask}
                  style={[styles.maskImage, {borderTopLeftRadius : 28}]}
                  resizeMode="contain"
                />
                <CustomButton  
                  onPress={() => handlePressBottomItem(selectedHome, setSelectedHome)} 
                  text={'Home'} 
                  svgComponent={
                    <Svg
                      width={28}
                      height={28}
                      viewBox="0 0 24 24"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <Path
                        d="M21 11.2039V12.725C21 16.6258 21 18.5763 19.8284 19.7881C18.6569 21 16.7712 21 13 21H9C5.22876 21 3.34315 21 2.17157 19.7881C1 18.5763 1 16.6258 1 12.725V11.2039C1 8.91549 1 7.77128 1.5192 6.82274C2.0384 5.87421 2.98695 5.28551 4.88403 4.10813L6.88403 2.86687C8.88939 1.62229 9.8921 1 11 1C12.1079 1 13.1106 1.62229 15.116 2.86687L17.116 4.10812C19.0131 5.28551 19.9616 5.87421 20.4808 6.82274"
                        stroke="white"
                        strokeLinecap="round"
                      />
                      <Path
                        d="M14 17H8"
                        stroke="white"
                        strokeLinecap="round"
                      />
                    </Svg>
                  }
                />
              </Animated.View>
            </View>) : (
                <Svg
                  width={28}
                  height={28}
                  viewBox="0 0 24 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <Path
                    d="M21 11.2039V12.725C21 16.6258 21 18.5763 19.8284 19.7881C18.6569 21 16.7712 21 13 21H9C5.22876 21 3.34315 21 2.17157 19.7881C1 18.5763 1 16.6258 1 12.725V11.2039C1 8.91549 1 7.77128 1.5192 6.82274C2.0384 5.87421 2.98695 5.28551 4.88403 4.10813L6.88403 2.86687C8.88939 1.62229 9.8921 1 11 1C12.1079 1 13.1106 1.62229 15.116 2.86687L17.116 4.10812C19.0131 5.28551 19.9616 5.87421 20.4808 6.82274"
                    stroke="white"
                    strokeLinecap="round"
                  />
                  <Path
                    d="M14 17H8"
                    stroke="white"
                    strokeLinecap="round"
                  />
                </Svg>
            )
          ),
          tabBarLabel: ({ focused, color }) => (
            focused && selectedHome ? (
              null
            ) : (<Text style={styles.inactiveText}>Home</Text>)
          ),
        }}
      >
        
      </Tab.Screen>

      <Tab.Screen
        name="Drinks near me"
        component={GoogleMap}
        listeners={{
          tabPress: e => {
            setDrinkModalVisible(true);
            setShowHeader(false);
            setSearchModalVisible(false);
            handlePressBottomItem(selectedDrinks, setSelectedDrinks);
            setSelectedHome(false);
            setSelectedNotification(false);
            setSelectedRecommand(false);
            setSelectedSearch(false);
            toggleAnimation();
          },
        }}
        options={{
          tabBarIcon: ({ color, size }) => (
            selectedDrinks ? (<View>
              <Animated.View style={{ height: maskSize.current }}>
                <Image
                  source={images.bottom_mask}
                  style={styles.maskImage}
                  resizeMode="contain"
                />
                <CustomButton  
                  onPress={() => handlePressBottomItem(selectedDrinks, setSelectedDrinks)} 
                  text={'Drinks'} 
                  svgComponent={
                    <Svg width={30} height={25} viewBox="0 0 24 19" fill="#FFF">
                      <Path 
                        d="M10.5254 3.72442L9.18968 2.94105C8.98524 2.82028 8.72594 2.90089 8.61102 3.11567L6.40323 7.29597L4.65051 8.11523C4.56532 8.15539 4.49747 8.22262 4.45069 8.3075L0.238961 16.2835C0.124327 16.4983 0.200846 16.7712 0.404993 16.8923L3.91044 18.9421C3.97425 18.9823 4.04644 19.0002 4.11458 19.0002C4.26329 19.0002 4.40795 18.9154 4.48447 18.7721L5.90975 16.073L7.49211 13.0743L8.6962 10.796C8.74298 10.7111 8.76002 10.6126 8.74702 10.5186L8.48339 8.51345L10.6912 4.33316C10.8061 4.11838 10.7296 3.84519 10.5254 3.72442ZM5.37787 15.2407L4.36984 14.6499L5.53957 12.4342L6.54789 13.025L5.37787 15.2407ZM7.67085 8.20923C7.62407 8.29411 7.60703 8.39268 7.61974 8.48668L7.88366 10.483L6.95619 12.242L5.57798 11.4361C5.37383 11.3153 5.11424 11.3959 4.99932 11.6107L3.41696 14.6094C3.36152 14.7126 3.34881 14.8379 3.37856 14.9498C3.4083 15.0615 3.48077 15.1601 3.5827 15.2182L4.9612 16.0237L3.94855 17.9394L1.1878 16.3283L5.12261 8.87152L6.87534 8.05256C6.96052 8.0121 7.02866 7.94517 7.07544 7.85999L9.1429 3.9392L9.73831 4.28388L7.67085 8.20923Z" 
                        fill="white"
                      />
                      <Path 
                        d="M12.0994 0C11.8653 0 11.6738 0.201394 11.6738 0.447508V1.40093C11.6738 1.64705 11.8653 1.84844 12.0994 1.84844C12.3333 1.84844 12.5248 1.64705 12.5248 1.40093V0.447508C12.5248 0.201394 12.3333 0 12.0994 0Z" 
                        fill="white"
                      />
                      <Path 
                        d="M12.0994 4.1626C11.8653 4.1626 11.6738 4.36399 11.6738 4.61011V5.56353C11.6738 5.80965 11.8653 6.01104 12.0994 6.01104C12.3333 6.01104 12.5248 5.80965 12.5248 5.56353V4.61011C12.5248 4.36399 12.3333 4.1626 12.0994 4.1626Z" 
                        fill="white"
                      />
                      <Path 
                        d="M10.5934 1.15934C10.4871 0.939994 10.2319 0.850554 10.0191 0.962202C9.81087 1.07416 9.72569 1.34278 9.83195 1.56669L10.2446 2.41698C10.3211 2.57366 10.4701 2.6631 10.6231 2.6631C10.6869 2.6631 10.7551 2.64515 10.8146 2.61381C11.0231 2.50186 11.1082 2.23354 11.002 2.00963L10.5934 1.15934Z" 
                        fill="white"
                      />
                      <Path 
                        d="M23.9546 16.2835L19.7431 8.3075C19.6963 8.22262 19.6282 8.15539 19.5433 8.11523L17.7906 7.29597L15.5828 3.11567C15.4679 2.90089 15.2083 2.82028 15.0041 2.94105L13.6727 3.72442C13.4686 3.84519 13.3917 4.11838 13.5067 4.33316L15.7145 8.51346L15.4508 10.5097C15.4381 10.6083 15.4552 10.702 15.5019 10.7872L16.7057 13.0655L17.4715 14.5154L19.7134 18.7629C19.7899 18.9108 19.9346 18.9914 20.0836 18.9914C20.1514 18.9914 20.2239 18.9735 20.2877 18.9333L23.7929 16.8832C23.997 16.7712 24.0695 16.4983 23.9546 16.2835ZM17.7735 13.2578L17.6503 13.025L18.6583 12.4342L19.8283 14.6499L18.82 15.2407L17.7735 13.2578ZM20.245 17.9394L19.2326 16.0237L20.6108 15.2182C20.8153 15.0974 20.8918 14.8245 20.7769 14.6094L19.1942 11.6107C19.0796 11.3959 18.82 11.3153 18.6158 11.4361L17.2376 12.242L16.3102 10.483L16.5738 8.48668C16.5865 8.38812 16.5697 8.29411 16.5227 8.20924L14.4552 4.28844L15.0509 3.94376L17.1184 7.86455C17.1651 7.94943 17.2333 8.01666 17.3182 8.05682L19.0709 8.87609L23.006 16.3328L20.245 17.9394Z" 
                        fill="white"
                      />
                      <Path 
                        d="M13.9497 2.41685L14.3623 1.56655C14.4688 1.34721 14.388 1.07858 14.1752 0.962065C13.9667 0.850416 13.7114 0.935294 13.6008 1.1592L13.1882 2.0095C13.082 2.22884 13.1628 2.49747 13.3753 2.61368C13.4391 2.64501 13.503 2.66296 13.5668 2.66296C13.7241 2.6584 13.8731 2.57352 13.9497 2.41685Z" 
                        fill="white"
                      />
                    </Svg>
                  }
                />
              </Animated.View>
            </View>) : (
                <Svg width={30} height={25} viewBox="0 0 24 19" fill="#FFF">
                  <Path 
                    d="M10.5254 3.72442L9.18968 2.94105C8.98524 2.82028 8.72594 2.90089 8.61102 3.11567L6.40323 7.29597L4.65051 8.11523C4.56532 8.15539 4.49747 8.22262 4.45069 8.3075L0.238961 16.2835C0.124327 16.4983 0.200846 16.7712 0.404993 16.8923L3.91044 18.9421C3.97425 18.9823 4.04644 19.0002 4.11458 19.0002C4.26329 19.0002 4.40795 18.9154 4.48447 18.7721L5.90975 16.073L7.49211 13.0743L8.6962 10.796C8.74298 10.7111 8.76002 10.6126 8.74702 10.5186L8.48339 8.51345L10.6912 4.33316C10.8061 4.11838 10.7296 3.84519 10.5254 3.72442ZM5.37787 15.2407L4.36984 14.6499L5.53957 12.4342L6.54789 13.025L5.37787 15.2407ZM7.67085 8.20923C7.62407 8.29411 7.60703 8.39268 7.61974 8.48668L7.88366 10.483L6.95619 12.242L5.57798 11.4361C5.37383 11.3153 5.11424 11.3959 4.99932 11.6107L3.41696 14.6094C3.36152 14.7126 3.34881 14.8379 3.37856 14.9498C3.4083 15.0615 3.48077 15.1601 3.5827 15.2182L4.9612 16.0237L3.94855 17.9394L1.1878 16.3283L5.12261 8.87152L6.87534 8.05256C6.96052 8.0121 7.02866 7.94517 7.07544 7.85999L9.1429 3.9392L9.73831 4.28388L7.67085 8.20923Z" 
                    fill="white"
                  />
                  <Path 
                    d="M12.0994 0C11.8653 0 11.6738 0.201394 11.6738 0.447508V1.40093C11.6738 1.64705 11.8653 1.84844 12.0994 1.84844C12.3333 1.84844 12.5248 1.64705 12.5248 1.40093V0.447508C12.5248 0.201394 12.3333 0 12.0994 0Z" 
                    fill="white"
                  />
                  <Path 
                    d="M12.0994 4.1626C11.8653 4.1626 11.6738 4.36399 11.6738 4.61011V5.56353C11.6738 5.80965 11.8653 6.01104 12.0994 6.01104C12.3333 6.01104 12.5248 5.80965 12.5248 5.56353V4.61011C12.5248 4.36399 12.3333 4.1626 12.0994 4.1626Z" 
                    fill="white"
                  />
                  <Path 
                    d="M10.5934 1.15934C10.4871 0.939994 10.2319 0.850554 10.0191 0.962202C9.81087 1.07416 9.72569 1.34278 9.83195 1.56669L10.2446 2.41698C10.3211 2.57366 10.4701 2.6631 10.6231 2.6631C10.6869 2.6631 10.7551 2.64515 10.8146 2.61381C11.0231 2.50186 11.1082 2.23354 11.002 2.00963L10.5934 1.15934Z" 
                    fill="white"
                  />
                  <Path 
                    d="M23.9546 16.2835L19.7431 8.3075C19.6963 8.22262 19.6282 8.15539 19.5433 8.11523L17.7906 7.29597L15.5828 3.11567C15.4679 2.90089 15.2083 2.82028 15.0041 2.94105L13.6727 3.72442C13.4686 3.84519 13.3917 4.11838 13.5067 4.33316L15.7145 8.51346L15.4508 10.5097C15.4381 10.6083 15.4552 10.702 15.5019 10.7872L16.7057 13.0655L17.4715 14.5154L19.7134 18.7629C19.7899 18.9108 19.9346 18.9914 20.0836 18.9914C20.1514 18.9914 20.2239 18.9735 20.2877 18.9333L23.7929 16.8832C23.997 16.7712 24.0695 16.4983 23.9546 16.2835ZM17.7735 13.2578L17.6503 13.025L18.6583 12.4342L19.8283 14.6499L18.82 15.2407L17.7735 13.2578ZM20.245 17.9394L19.2326 16.0237L20.6108 15.2182C20.8153 15.0974 20.8918 14.8245 20.7769 14.6094L19.1942 11.6107C19.0796 11.3959 18.82 11.3153 18.6158 11.4361L17.2376 12.242L16.3102 10.483L16.5738 8.48668C16.5865 8.38812 16.5697 8.29411 16.5227 8.20924L14.4552 4.28844L15.0509 3.94376L17.1184 7.86455C17.1651 7.94943 17.2333 8.01666 17.3182 8.05682L19.0709 8.87609L23.006 16.3328L20.245 17.9394Z" 
                    fill="white"
                  />
                  <Path 
                    d="M13.9497 2.41685L14.3623 1.56655C14.4688 1.34721 14.388 1.07858 14.1752 0.962065C13.9667 0.850416 13.7114 0.935294 13.6008 1.1592L13.1882 2.0095C13.082 2.22884 13.1628 2.49747 13.3753 2.61368C13.4391 2.64501 13.503 2.66296 13.5668 2.66296C13.7241 2.6584 13.8731 2.57352 13.9497 2.41685Z" 
                    fill="white"
                  />
                </Svg>
            )
          ),
          tabBarLabel: ({ focused, color }) => (
            focused && selectedDrinks ? (
              null
            ) : (<Text style={styles.inactiveText}>Drinks Near Me</Text>)
          ),
        }}>
        </Tab.Screen>
      <Tab.Screen
        name="search"
        component={Search}
        listeners={{
          tabPress: e => {
            setSearchModalVisible(true);
            setDrinkModalVisible(false);
            handlePressBottomItem(selectedSearch, setSelectedSearch);
            setSelectedDrinks(false);
            setSelectedNotification(false);
            setSelectedRecommand(false);
            setSelectedHome(false);
            toggleAnimation();
            setShowHeader(true);
          },
        }}
        options={{
          tabBarIcon: ({ color, size }) => (
            selectedSearch ? (<View>
              <Animated.View style={{ height: maskSize.current }}>
                <Image
                  source={images.bottom_mask}
                  style={styles.maskImage}
                  resizeMode="contain"
                />
                <CustomButton  
                  onPress={() => handlePressBottomItem(selectedSearch, setSelectedSearch)} 
                  text={'Search'} 
                  svgComponent={
                    <Svg width={21} height={20} viewBox="0 0 21 20" fill="none">
                      <Path
                        d="M14.7702 14.6412L19.0977 19M17.0977 9C17.0977 13.4183 13.516 17 9.09766 17C4.67938 17 1.09766 13.4183 1.09766 9C1.09766 4.58172 4.67938 1 9.09766 1C13.516 1 17.0977 4.58172 17.0977 9Z"
                        stroke="#FFF"
                        strokeWidth={2}
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </Svg>
                  }
                />
              </Animated.View>
            </View>) : (
                <Svg width={21} height={20} viewBox="0 0 21 20" fill="none">
                  <Path
                    d="M14.7702 14.6412L19.0977 19M17.0977 9C17.0977 13.4183 13.516 17 9.09766 17C4.67938 17 1.09766 13.4183 1.09766 9C1.09766 4.58172 4.67938 1 9.09766 1C13.516 1 17.0977 4.58172 17.0977 9Z"
                    stroke="#FFF"
                    strokeWidth={2}
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                </Svg>
            )
          ),
          tabBarLabel: ({ focused, color }) => (
            focused && selectedSearch ? (
              null
            ) : (<Text style={styles.inactiveText}>Search</Text>)
          ),
        }}></Tab.Screen>
      <Tab.Screen
        name="auth"
        component={UserPage}
        options={{
          tabBarItemStyle: {
            display: 'none',
          },
        }}></Tab.Screen>
      <Tab.Screen
        name="Recommand"
        component={Recommendation}
        listeners={{
          tabPress: e => {
            setShowHeader(true);
            handlePressBottomItem(selectedRecommand, setSelectedRecommand);
            setSelectedDrinks(false);
            setSelectedNotification(false);
            setSelectedHome(false);
            setSelectedSearch(false);
            toggleAnimation();
          },
        }}
        options={{
          tabBarIcon: ({ color, size }) => (
            selectedRecommand ? (<View>
              <Animated.View style={{ height: maskSize.current }}>
                <Image
                  source={images.bottom_mask}
                  style={styles.maskImage}
                  resizeMode="contain"
                />
                <CustomButton  
                  onPress={() => handlePressBottomItem(selectedRecommand, setSelectedRecommand)} 
                  text={'Recomm'} 
                  svgComponent={
                    <Svg width={40} height={26} viewBox="0 0 19 26" fill="none">
                      <Path d="M8.59796 0C12.8066 0 16.2184 3.41178 16.2184 7.62042C16.2184 10.0476 15.0836 12.2098 13.3157 13.6053L13.3622 13.5682L13.3614 19.2847C13.3614 19.8079 12.8176 20.1536 12.3438 19.9316L8.59846 18.1765L4.85509 19.9316C4.38134 20.1537 3.8374 19.808 3.8374 19.2847L3.83586 13.57C2.09442 12.1755 0.977539 10.0284 0.977539 7.62042C0.977539 3.41178 4.38932 0 8.59796 0ZM11.9331 14.4742L11.9714 14.4554C10.9545 14.9582 9.80922 15.2408 8.59796 15.2408C7.52594 15.2408 6.50563 15.0195 5.58024 14.62L5.26574 14.4756L5.26622 18.1607L8.29511 16.7406C8.48722 16.6506 8.70942 16.6506 8.90154 16.7406L11.9326 18.161L11.9331 14.4742ZM8.59796 1.42883C5.17844 1.42883 2.40637 4.2009 2.40637 7.62042C2.40637 11.0399 5.17844 13.812 8.59796 13.812C12.0175 13.812 14.7895 11.0399 14.7895 7.62042C14.7895 4.2009 12.0175 1.42883 8.59796 1.42883ZM8.81589 4.42208L9.68511 6.18682L11.6321 6.46817C11.8315 6.49698 11.9112 6.742 11.7669 6.8826L10.3587 8.25472L10.6911 10.1935C10.7252 10.3921 10.5167 10.5434 10.3385 10.4495L8.59796 9.53274L6.85745 10.4495C6.67914 10.5435 6.4706 10.3919 6.50483 10.1933L6.8389 8.25472L5.42913 6.8827C5.28471 6.74214 5.36436 6.49699 5.56382 6.46817L7.5108 6.18682L8.38003 4.42208C8.46907 4.24129 8.72684 4.24129 8.81589 4.42208Z" fill="white"/>
                    </Svg>
                  }
                />
              </Animated.View>
            </View>) : (
                <Svg width={19} height={26} viewBox="0 0 19 26" fill="none">
                  <Path d="M8.59796 0C12.8066 0 16.2184 3.41178 16.2184 7.62042C16.2184 10.0476 15.0836 12.2098 13.3157 13.6053L13.3622 13.5682L13.3614 19.2847C13.3614 19.8079 12.8176 20.1536 12.3438 19.9316L8.59846 18.1765L4.85509 19.9316C4.38134 20.1537 3.8374 19.808 3.8374 19.2847L3.83586 13.57C2.09442 12.1755 0.977539 10.0284 0.977539 7.62042C0.977539 3.41178 4.38932 0 8.59796 0ZM11.9331 14.4742L11.9714 14.4554C10.9545 14.9582 9.80922 15.2408 8.59796 15.2408C7.52594 15.2408 6.50563 15.0195 5.58024 14.62L5.26574 14.4756L5.26622 18.1607L8.29511 16.7406C8.48722 16.6506 8.70942 16.6506 8.90154 16.7406L11.9326 18.161L11.9331 14.4742ZM8.59796 1.42883C5.17844 1.42883 2.40637 4.2009 2.40637 7.62042C2.40637 11.0399 5.17844 13.812 8.59796 13.812C12.0175 13.812 14.7895 11.0399 14.7895 7.62042C14.7895 4.2009 12.0175 1.42883 8.59796 1.42883ZM8.81589 4.42208L9.68511 6.18682L11.6321 6.46817C11.8315 6.49698 11.9112 6.742 11.7669 6.8826L10.3587 8.25472L10.6911 10.1935C10.7252 10.3921 10.5167 10.5434 10.3385 10.4495L8.59796 9.53274L6.85745 10.4495C6.67914 10.5435 6.4706 10.3919 6.50483 10.1933L6.8389 8.25472L5.42913 6.8827C5.28471 6.74214 5.36436 6.49699 5.56382 6.46817L7.5108 6.18682L8.38003 4.42208C8.46907 4.24129 8.72684 4.24129 8.81589 4.42208Z" fill="white"/>
                </Svg>
            )
          ),
          tabBarLabel: ({ focused, color }) => (
            focused && selectedRecommand ? (
              null
            ) : (<Text style={styles.inactiveText}>{Platform.OS === 'ios' ? 'Recommand' : 'Recommandation'}</Text>)
          ),
        }}
      />
      <Tab.Screen
        name="Notifications"
        component={Dashboard}
        listeners={{
          tabPress: e => {
            setShowHeader(true);
            handlePressBottomItem(selectedNotification, setSelectedNotification);
            setSelectedDrinks(false);
            setSelectedRecommand(false);
            setSelectedHome(false);
            setSelectedSearch(false);
            toggleAnimation();
          },
        }}
        options={{
          tabBarIcon: ({ color, size }) => (
            selectedNotification ? (<View>
              <Animated.View style={{ height: maskSize.current }}>
                <Image
                  source={images.bottom_mask}
                  style={[styles.maskImage, {borderTopRightRadius : 28}]}
                  resizeMode="contain"
                />
                <CustomButton  
                  onPress={() => handlePressBottomItem(selectedNotification, setSelectedNotification)} 
                  text={'News'} 
                  svgComponent={
                    <Svg width={26} height={20} viewBox="0 0 26 20" fill="none">
                      <Path d="M18.4329 13.3844C18.4052 13.3562 18.4052 13.2992 18.4052 13.2426V7.81483C18.4052 4.71721 16.11 2.18825 13.1507 1.87542V0.568357C13.1507 0.255838 12.9018 0 12.5977 0C12.2935 0 12.0446 0.255838 12.0446 0.568357V1.87542C9.11308 2.15976 6.79012 4.71721 6.79012 7.81483V13.2707C6.79012 13.3277 6.76239 13.3562 6.73497 13.3844L5.35211 14.8055C5.10314 15.061 4.99253 15.3738 4.99253 15.743V16.1695C4.99253 16.8797 5.57334 17.4766 6.26477 17.4766H10.1364C10.3299 18.67 11.3531 19.6078 12.5977 19.6078C13.8422 19.6078 14.8655 18.6985 15.059 17.4766H18.9305C19.622 17.4766 20.2028 16.8797 20.2028 16.1695V15.743C20.2028 15.402 20.0644 15.061 19.8432 14.8055L18.4329 13.3844ZM12.5977 18.4711C11.9891 18.4711 11.4638 18.0449 11.298 17.4766H13.9251C13.7316 18.0449 13.2062 18.4711 12.5977 18.4711ZM19.0966 16.1695C19.0966 16.2547 19.0137 16.3399 18.9305 16.3399H6.26477C6.18158 16.3399 6.09869 16.2547 6.09869 16.1695V15.743C6.09869 15.6863 6.12642 15.6578 6.15415 15.6293L7.53671 14.2086C7.78567 13.9528 7.89629 13.6403 7.89629 13.2707V7.81483C7.89629 5.17189 9.99801 2.98395 12.5977 2.98395C15.1973 2.98395 17.299 5.1434 17.299 7.81483V13.2707C17.299 13.6118 17.4374 13.9528 17.6586 14.2086L19.0412 15.6293C19.0689 15.6578 19.0966 15.7148 19.0966 15.743V16.1695ZM5.02025 12.7879C4.90964 12.9015 4.77129 12.9582 4.63295 12.9582C4.4949 12.9582 4.35655 12.9015 4.24594 12.7879C3.361 11.8785 2.86308 10.6566 2.86308 9.37773C2.86308 8.09885 3.361 6.87696 4.24594 5.96759C4.46717 5.74025 4.79902 5.74025 5.02025 5.96759C5.24149 6.19493 5.24149 6.53595 5.02025 6.76329C4.32882 7.47381 3.96924 8.38318 3.96924 9.37773C3.96924 10.3723 4.35655 11.2816 5.02025 11.9922C5.24149 12.2195 5.24149 12.5605 5.02025 12.7879ZM3.05658 14.0098C3.27812 14.2371 3.27812 14.5781 3.05658 14.8055C2.94596 14.9191 2.80792 14.9758 2.66957 14.9758C2.53123 14.9758 2.39288 14.9191 2.28226 14.8055C0.871974 13.3562 0.0976562 11.4238 0.0976562 9.37773C0.0976562 7.33165 0.871974 5.39923 2.28226 3.95C2.5035 3.72266 2.83535 3.72266 3.05658 3.95C3.27812 4.17734 3.27812 4.51836 3.05658 4.7457C1.86753 5.96759 1.20382 7.61598 1.20382 9.37773C1.20382 11.1395 1.86753 12.7594 3.05658 14.0098ZM20.9494 12.7879C20.8388 12.9015 20.7004 12.9582 20.5624 12.9582C20.424 12.9582 20.2857 12.9015 20.1751 12.7879C19.9538 12.5605 19.9538 12.2195 20.1751 11.9922C21.5853 10.5429 21.5853 8.21252 20.1751 6.76329C19.9538 6.53595 19.9538 6.19493 20.1751 5.96759C20.3963 5.74025 20.7281 5.74025 20.9494 5.96759C22.7747 7.84301 22.7747 10.9121 20.9494 12.7879ZM25.0977 9.37773C25.0977 11.4238 24.3233 13.3562 22.913 14.8055C22.8024 14.9191 22.6641 14.9758 22.5257 14.9758C22.3874 14.9758 22.2493 14.9191 22.1384 14.8055C21.9172 14.5781 21.9172 14.2371 22.1384 14.0098C23.3278 12.7879 23.9915 11.1395 23.9915 9.37773C23.9915 7.61567 23.3278 5.99609 22.1384 4.7457C21.9172 4.51836 21.9172 4.17734 22.1384 3.95C22.36 3.72266 22.6918 3.72266 22.913 3.95C24.3233 5.39923 25.0977 7.33165 25.0977 9.37773Z" fill="white"/>
                    </Svg>
                  }
                />
              </Animated.View>
            </View>) : (
                <Svg width={26} height={20} viewBox="0 0 26 20" fill="none">
                  <Path d="M18.4329 13.3844C18.4052 13.3562 18.4052 13.2992 18.4052 13.2426V7.81483C18.4052 4.71721 16.11 2.18825 13.1507 1.87542V0.568357C13.1507 0.255838 12.9018 0 12.5977 0C12.2935 0 12.0446 0.255838 12.0446 0.568357V1.87542C9.11308 2.15976 6.79012 4.71721 6.79012 7.81483V13.2707C6.79012 13.3277 6.76239 13.3562 6.73497 13.3844L5.35211 14.8055C5.10314 15.061 4.99253 15.3738 4.99253 15.743V16.1695C4.99253 16.8797 5.57334 17.4766 6.26477 17.4766H10.1364C10.3299 18.67 11.3531 19.6078 12.5977 19.6078C13.8422 19.6078 14.8655 18.6985 15.059 17.4766H18.9305C19.622 17.4766 20.2028 16.8797 20.2028 16.1695V15.743C20.2028 15.402 20.0644 15.061 19.8432 14.8055L18.4329 13.3844ZM12.5977 18.4711C11.9891 18.4711 11.4638 18.0449 11.298 17.4766H13.9251C13.7316 18.0449 13.2062 18.4711 12.5977 18.4711ZM19.0966 16.1695C19.0966 16.2547 19.0137 16.3399 18.9305 16.3399H6.26477C6.18158 16.3399 6.09869 16.2547 6.09869 16.1695V15.743C6.09869 15.6863 6.12642 15.6578 6.15415 15.6293L7.53671 14.2086C7.78567 13.9528 7.89629 13.6403 7.89629 13.2707V7.81483C7.89629 5.17189 9.99801 2.98395 12.5977 2.98395C15.1973 2.98395 17.299 5.1434 17.299 7.81483V13.2707C17.299 13.6118 17.4374 13.9528 17.6586 14.2086L19.0412 15.6293C19.0689 15.6578 19.0966 15.7148 19.0966 15.743V16.1695ZM5.02025 12.7879C4.90964 12.9015 4.77129 12.9582 4.63295 12.9582C4.4949 12.9582 4.35655 12.9015 4.24594 12.7879C3.361 11.8785 2.86308 10.6566 2.86308 9.37773C2.86308 8.09885 3.361 6.87696 4.24594 5.96759C4.46717 5.74025 4.79902 5.74025 5.02025 5.96759C5.24149 6.19493 5.24149 6.53595 5.02025 6.76329C4.32882 7.47381 3.96924 8.38318 3.96924 9.37773C3.96924 10.3723 4.35655 11.2816 5.02025 11.9922C5.24149 12.2195 5.24149 12.5605 5.02025 12.7879ZM3.05658 14.0098C3.27812 14.2371 3.27812 14.5781 3.05658 14.8055C2.94596 14.9191 2.80792 14.9758 2.66957 14.9758C2.53123 14.9758 2.39288 14.9191 2.28226 14.8055C0.871974 13.3562 0.0976562 11.4238 0.0976562 9.37773C0.0976562 7.33165 0.871974 5.39923 2.28226 3.95C2.5035 3.72266 2.83535 3.72266 3.05658 3.95C3.27812 4.17734 3.27812 4.51836 3.05658 4.7457C1.86753 5.96759 1.20382 7.61598 1.20382 9.37773C1.20382 11.1395 1.86753 12.7594 3.05658 14.0098ZM20.9494 12.7879C20.8388 12.9015 20.7004 12.9582 20.5624 12.9582C20.424 12.9582 20.2857 12.9015 20.1751 12.7879C19.9538 12.5605 19.9538 12.2195 20.1751 11.9922C21.5853 10.5429 21.5853 8.21252 20.1751 6.76329C19.9538 6.53595 19.9538 6.19493 20.1751 5.96759C20.3963 5.74025 20.7281 5.74025 20.9494 5.96759C22.7747 7.84301 22.7747 10.9121 20.9494 12.7879ZM25.0977 9.37773C25.0977 11.4238 24.3233 13.3562 22.913 14.8055C22.8024 14.9191 22.6641 14.9758 22.5257 14.9758C22.3874 14.9758 22.2493 14.9191 22.1384 14.8055C21.9172 14.5781 21.9172 14.2371 22.1384 14.0098C23.3278 12.7879 23.9915 11.1395 23.9915 9.37773C23.9915 7.61567 23.3278 5.99609 22.1384 4.7457C21.9172 4.51836 21.9172 4.17734 22.1384 3.95C22.36 3.72266 22.6918 3.72266 22.913 3.95C24.3233 5.39923 25.0977 7.33165 25.0977 9.37773Z" fill="white"/>
                </Svg>
            )
          ),
          tabBarLabel: ({ focused, color }) => (
            focused && selectedNotification ? (
              null
            ) : (<Text style={styles.inactiveText}>Notifications</Text>)
          ),
        }}
      />
    </Tab.Navigator>
  );
};


const styles = StyleSheet.create({
  customBtn : {
    position: 'absolute', 
    top: -13, 
    right: 13, 
    backgroundColor : '#1DA1F2', 
    borderRadius :9999, 
    width : 53, 
    height : 53, 
    justifyContent : 'center',
    alignItems : 'center'
  }, 
  customBtnText : {
    color: 'white', 
    fontSize: 10, 
    zIndex : 999, 
    justifyContent : 'center'
  },
  maskImage : {
    width: 80, 
    height: 70,
    tintColor: '#fff', 
    top: -6.5
  },
  inactiveText : {
    color: '#aaa', 
    fontSize : 10, 
    top : Platform.OS === 'ios' ? 5 : -10
  }
})

export default BottomTabNavigator;
